// <auto-generated />
using System;
using Backend.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Backend.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20220124180047_SeededDB")]
    partial class SeededDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.0");

            modelBuilder.Entity("Backend.Models.Film", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsShowing")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ScreeningTime")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Films");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            IsShowing = true,
                            ScreeningTime = 156,
                            Title = "Diune"
                        },
                        new
                        {
                            ID = 2,
                            IsShowing = true,
                            ScreeningTime = 112,
                            Title = "The Intouchables"
                        },
                        new
                        {
                            ID = 3,
                            IsShowing = true,
                            ScreeningTime = 91,
                            Title = "Bee Movie"
                        },
                        new
                        {
                            ID = 4,
                            IsShowing = true,
                            ScreeningTime = 121,
                            Title = "Hot Fuzz"
                        },
                        new
                        {
                            ID = 5,
                            IsShowing = true,
                            ScreeningTime = 600,
                            Title = "Motywacja"
                        });
                });

            modelBuilder.Entity("Backend.Models.Room", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Capacity")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Capacity = 60
                        },
                        new
                        {
                            ID = 2,
                            Capacity = 150
                        });
                });

            modelBuilder.Entity("Backend.Models.Screening", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("BeginsAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("FilmID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RoomID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SoldTickets")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("FilmID");

                    b.HasIndex("RoomID");

                    b.ToTable("Screenings");
                });

            modelBuilder.Entity("Backend.Models.TakenSeat", b =>
                {
                    b.Property<int>("ScreeningID")
                        .HasColumnType("INTEGER");

                    b.Property<short>("SeatID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ScreeningID", "SeatID");

                    b.ToTable("TakenSeats");
                });

            modelBuilder.Entity("Backend.Models.Screening", b =>
                {
                    b.HasOne("Backend.Models.Film", "Film")
                        .WithMany()
                        .HasForeignKey("FilmID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Backend.Models.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Film");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Backend.Models.TakenSeat", b =>
                {
                    b.HasOne("Backend.Models.Screening", "Screening")
                        .WithMany()
                        .HasForeignKey("ScreeningID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Screening");
                });
#pragma warning restore 612, 618
        }
    }
}
